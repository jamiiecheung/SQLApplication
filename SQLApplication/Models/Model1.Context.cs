//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SQLApplication.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SJAMsSynchMetroEntities : DbContext
    {
        public SJAMsSynchMetroEntities()
            : base("name=SJAMsSynchMetroEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<locSyncActionItem> locSyncActionItems { get; set; }
        public virtual DbSet<locSyncAlia> locSyncAlias { get; set; }
        public virtual DbSet<locSyncCalendar> locSyncCalendars { get; set; }
        public virtual DbSet<locSyncContact> locSyncContacts { get; set; }
        public virtual DbSet<locSyncCRMhistory> locSyncCRMhistories { get; set; }
        public virtual DbSet<locSyncCRMOppty> locSyncCRMOpptys { get; set; }
        public virtual DbSet<locSyncCustomer> locSyncCustomers { get; set; }
        public virtual DbSet<locSyncDelete> locSyncDeletes { get; set; }
        public virtual DbSet<locSyncEmployee> locSyncEmployees { get; set; }
        public virtual DbSet<locSyncForecast> locSyncForecasts { get; set; }
        public virtual DbSet<locSyncForedetail> locSyncForedetails { get; set; }
        public virtual DbSet<locSyncLead> locSyncLeads { get; set; }
        public virtual DbSet<locSyncOpportunity> locSyncOpportunities { get; set; }
        public virtual DbSet<locSyncOpportunityDetail> locSyncOpportunityDetails { get; set; }
        public virtual DbSet<locSyncOrderDetail> locSyncOrderDetails { get; set; }
        public virtual DbSet<locSyncOrder> locSyncOrders { get; set; }
        public virtual DbSet<locSyncProgram> locSyncPrograms { get; set; }
        public virtual DbSet<locSyncQuote> locSyncQuotes { get; set; }
        public virtual DbSet<locSyncSJAM> locSyncSJAMs { get; set; }
        public virtual DbSet<locSyncTripReport> locSyncTripReports { get; set; }
        public virtual DbSet<SJAMsField> SJAMsFields { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tblActionItem> tblActionItems { get; set; }
        public virtual DbSet<tblAlia> tblAlias { get; set; }
        public virtual DbSet<tblCalendar> tblCalendars { get; set; }
        public virtual DbSet<tblContact> tblContacts { get; set; }
        public virtual DbSet<tblCRMhistory> tblCRMhistories { get; set; }
        public virtual DbSet<tblCRMOppty> tblCRMOpptys { get; set; }
        public virtual DbSet<tblCustomer> tblCustomers { get; set; }
        public virtual DbSet<tblDelete> tblDeletes { get; set; }
        public virtual DbSet<tblEmployee> tblEmployees { get; set; }
        public virtual DbSet<tblflt> tblflts { get; set; }
        public virtual DbSet<tblForecast> tblForecasts { get; set; }
        public virtual DbSet<tblForedetail> tblForedetails { get; set; }
        public virtual DbSet<tblLead> tblLeads { get; set; }
        public virtual DbSet<tblOpportunity> tblOpportunities { get; set; }
        public virtual DbSet<tblOpportunityDetail> tblOpportunityDetails { get; set; }
        public virtual DbSet<tblOrderDetail> tblOrderDetails { get; set; }
        public virtual DbSet<tblOrder> tblOrders { get; set; }
        public virtual DbSet<tblProgram> tblPrograms { get; set; }
        public virtual DbSet<tblQuote> tblQuotes { get; set; }
        public virtual DbSet<tblSJAM> tblSJAMs { get; set; }
        public virtual DbSet<tblsynch> tblsynches { get; set; }
        public virtual DbSet<tblTripReport> tblTripReports { get; set; }
        public virtual DbSet<Calendar> Calendars { get; set; }
        public virtual DbSet<locSyncCalendarTest> locSyncCalendarTests { get; set; }
        public virtual DbSet<SJAMsAuto> SJAMsAutoes { get; set; }
        public virtual DbSet<tblforeIDholder> tblforeIDholders { get; set; }
        public virtual DbSet<tblsale> tblsales { get; set; }
        public virtual DbSet<testlocsync> testlocsyncs { get; set; }
    
        public virtual int apploctotbl()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("apploctotbl");
        }
    
        public virtual ObjectResult<CRMinput_Result> CRMinput()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRMinput_Result>("CRMinput");
        }
    
        public virtual int deleteloc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteloc");
        }
    
        public virtual int dellocandtbl()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dellocandtbl");
        }
    
        public virtual ObjectResult<hawd_Result> hawd()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<hawd_Result>("hawd");
        }
    
        public virtual ObjectResult<qrySales_Result> qrySales()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qrySales_Result>("qrySales");
        }
    
        public virtual ObjectResult<qryTripReports_Result> qryTripReports()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qryTripReports_Result>("qryTripReports");
        }
    
        public virtual int SJAMsSend()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SJAMsSend");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int Synch001()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Synch001");
        }
    
        public virtual int SynchXXX()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SynchXXX");
        }
    
        public virtual ObjectResult<tbltolocapp_Result> tbltolocapp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbltolocapp_Result>("tbltolocapp");
        }
    }
}
